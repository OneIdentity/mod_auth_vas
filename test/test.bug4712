# bug 4712 
description "no crash when protected handler forks (CGI)"
#
# This test works by causing a CGI shell script to be run within
# a VAS-protected context.
#

cleanup () {
   ap_stop
   ap_conf_restore
   rm -f /tmp/hello$$ /tmp/hello$$.exp
}
trap cleanup 0 1 2

ap_conf_save

#-- give flexibility to the published test directory
ap_conf_append <<-.
	$DEBUGHASH Loglevel debug
	<Directory "$DOC_DIR">
		Options none
		AllowOverride All
		AuthVasUseBasic on
		Order allow,deny
		Allow from all
	</Directory>
.
ap_conf_check

#-- generate the access controls
cat <<-. >$DOC_DIR/.htaccess
	Options ExecCGI
	AddHandler cgi-script .cgi
	AuthType VAS
	require user $USER_test
.

#-- generate the test script
cat <<-. >$DOC_DIR/test.cgi
#!/bin/sh
	echo "Running $0 as pid $$" >&2
	echo "Content-type: text/plain"
	echo ""
	echo "yes$$"
.
chmod 755 $DOC_DIR/test.cgi

$DOC_DIR/test.cgi

URL=$DOC_URL/test.cgi

#-- put 'yes' into a file for comparison
EXPECTED=/tmp/hello$$.exp
echo yes$$ > $EXPECTED

$NDEBUG || ls -la $DOC_DIR

ap_start

#-- simulate what we expect the test.cgi to emit

#-- get credentials to access the resource
vas_kinit $USER_test $PASSWD_test

#
# check we can access the file using SPNEGO
#
fetch_nego -u $USER_test `ifdebug -d` $URL > /tmp/hello$$ || 
	fail "couldn't fetch with spnego"
test 200 = "$FETCH_RES" || fail "expected 200 but got $FETCH_RES"
cmp /tmp/hello$$  $EXPECTED || 
	fail "different file for nego?"

#
# check that the file is protected
#
if fetch_simple `ifdebug -d` $URL > /tmp/hello$$; then
	fail "resource wasn't protected"
else
	test 401 = "$FETCH_RES" || fail "expected 401 but got $FETCH_RES"
	: expected to fail
fi

#
# check we can access the file with Basic fallback
#
fetch_basic `ifdebug -d` $USER_test:$PASSWD_test $URL > /tmp/hello$$ || 
	fail "couldn't fetch with basic"
test 200 = "$FETCH_RES" || fail "expected 200 but got $FETCH_RES"
cmp /tmp/hello$$  $EXPECTED || 
	fail "different file for basic?"

